#!/usr/bin/env node
'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf8');
var util = require('util');

var socket;
var channel;

var NICKNAME = /^\/nickname (.+)$/;
var CHANNEL = /^\/channel (.*)$/;
process.stdin.on('data', function (text) {
	var input = text.replace(/\n+$/, '');
	if (/^\/quit/.test(input)) {
		done();
	} else if (/^\/connect/.test(input)) {
		socket = createSocket();
	} else if (NICKNAME.test(input)) {
		var match = NICKNAME.exec(input);
		if (match) {
			send(match[1], 'player:nickname');
		} else {
			console.error('Invalid nickname');
		}
	} else if (CHANNEL.test(input)) {
		var match = CHANNEL.exec(input);
		if (match) {
			channel = match[1];
			console.log('Switching to channel ' + channel);
		} else {
			console.error('Invalid channel');
		}
	} else {
		send(input);
	}
});

function done() {
	console.log('Now that process.stdin is paused, there is nothing more to do.');
	process.exit();
}

function createSocket() {
	var PORT = process.env.PORT || 3000;
	var socket = require('socket.io-client')('http://localhost:' + PORT);

	socket.on('connect', function() {
		console.log('client connected');
	});

	[ // Channels to listen
		'std',
		'player:nickname'
	].forEach(function(channel) {
		socket.on(channel, function(message) {
			console.log(util.format('[%s] %s', channel, util.inspect(message)));
		});
	});

	return socket;
}

function send(message, chan) {
	socket.emit(chan || channel, message);
}
